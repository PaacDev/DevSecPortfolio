name: Django CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DEBUG: ${{ secrets.DEBUG }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DEBUG=${{ secrets.DEBUG }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

      - name: Build and start containers
        run: |
          docker compose up -d --build

      - name: Wait for DB to be ready
        run: |
          until docker compose exec db pg_isready -U $DB_USER; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run Django tests
        run: |
          docker compose exec web sh -c "coverage run --source='.' manage.py test && coverage xml"

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=PaacDev_DevSecPortfolio
            -Dsonar.organization=pac1006
            -Dsonar.sources=.
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Shutdown services
        run: docker compose down -v
